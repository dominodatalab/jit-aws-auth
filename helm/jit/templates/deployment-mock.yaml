{{ if .Values.testing }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.env.name }}-mock
  namespace:  {{ .Values.env.namespace.field }}
  labels:
    app: {{ .Values.env.name }}-mock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.env.name }}-mock
  template:
    metadata:
      labels:
        app: {{ .Values.env.name }}-mock
        nucleus-client: "true"
        security.istio.io/tlsMode: "istio"
    spec:
      securityContext:
          fsGroup: 12574
      nodeSelector:
        dominodatalab.com/node-pool: platform
      containers:
      - name: {{ .Values.env.name }}-mock
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
        image: "{{ .Values.image.repository }}/{{ .Values.mock_server.jitMockContainer }}:{{ .Values.mock_server.jitMockVersion }}"
        env:
        - name: DOMINO_USER_HOST
          value: "http://nucleus-frontend.{{ .Values.env.namespace.platform }}"
        - name: DEFAULT_FIELD_NS
          value: {{ .Values.env.namespace.field }}
        - name: DEFAULT_COMPUTE_NS
          value: {{ .Values.env.namespace.compute }}
        {{- if .Values.mock_server.containerPort }}
        - name: APP_PORT
          value: "{{ .Values.mock_server.containerPort }}"
        {{- end }}
        ports:
        - containerPort: {{ .Values.mock_server.containerPort | default 8080 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.mock_server.containerPort | default 8080 }}
            scheme: HTTP
          initialDelaySeconds: 5
          failureThreshold: 2
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.mock_server.containerPort | default 8080 }}
            scheme: HTTP
          initialDelaySeconds: 5
          failureThreshold: 2
          timeoutSeconds: 5
        imagePullPolicy: Always
        volumeMounts:
          - name: logs
            mountPath: /var/log/jit
      volumes:
        - name: logs
          emptyDir:
            sizeLimit: 1000Mi
{{ end }}              